<template>
    <div class="picking-process">
        <mt-header fixed title="拣货单任务">
            <router-link to="/menu" slot="left" tag="span">
                <i class="mintui mintui-back go-back"></i><span>返回</span>
            </router-link>
            <div slot="right">
                分区：<select v-model="warehouse_area_id" style="width: 60px;">
                <option v-for="item in warehouseAreaList"
                        :key="item.value"
                        :label="item.label"
                        :value="item.value">{{item.label}}
                </option>
            </select>
            </div>
        </mt-header>
        <div class="pt-lg">
            <table class="table" width="100%">
                <thead>
                <tr>
                    <th width="24%">拣货单号</th>
                    <th width="24%">类型</th>
                    <th width="28%">日期</th>
                    <th width="16%">状态</th>
                    <th width="8%"></th>
                </tr>
                </thead>
                <tbody v-resize="{height:2}">
                <tr
                        v-for="(row,index) in pickingData"
                        :key="row.id"
                        :class="[index%2===0?'line-bg':'',[2,10].includes(row.status)?'red':'']"
                        @click="get_picking(row)"
                >
                    <td width="24%" class="remark">{{row.id}}<i v-if="row.remark==='特殊渠道'" class="remark-logo">T</i>
                    </td>
                    <td width="24%">{{row.type | type_name}}<i v-if="row.status_more" class="type-more">多</i></td>
                    <td width="28%">{{row.create_time | create_time}}</td>
                    <td width="16%" style="font-size:12px;">{{row.status | status_name }}</td>
                    <td width="8%"><i class="mintui mintui-back back" style="font-size: 17px;"></i></td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</template>
<style lang="stylus" scoped>
    .remark {
        .remark-logo {
            display: inline-block;
            border-radius 50%
            color: #ffffff
            background-color: #333;
            width: 15px;
            height: 15px;
            font-size: 12px;
            line-height: 15px;
            text-align: center;
        }
    }

    .type-more {
        display: inline-block;
        border-radius 50%
        color: #ffffff
        background-color: #333;
        width: 15px;
        height: 15px;
        font-size: 12px;
        line-height: 15px;
        text-align: center;
    }

    .mint-cell-value {
        width: 100%;
    }


</style>
<script>
    import {Toast} from 'mint-ui';
    import {api_picking_process, api_warehouse_area} from '../../api/picking-process'
    import {mapGetters, mapActions} from 'vuex';
    /*
     * 后端:张文宇
     * */
    export default {
        data() {
            return {
                warehouse_id: 0,
                warehouse_area_id: 0,
                pickingData: [],
                warehouseAreaList: [],
            }
        },
        filters: {
            type_name(type) {
                switch (type) {
                    case 1:
                        return '单品单件';
                    case 2:
                        return '单品多件';
                    case 4:
                        return '多品多件';
                }
            },
            status_name(status) {
                switch (status) {
                    case 1:
                        return '待拣';
                    case 2:
                        return '在拣';
                    case 10:
                        return '在拣';
                }
            },
            create_time(time) {
                time = new Date(time * 1000);
                return `${time.getDate()} ${time.getHours()}:${time.getMinutes()}`;
            }
        },
        mounted() {
            this.warehouse_id = this.$route.query.warehouse_id;
            this.get_warehouse_area();
        },

        methods: {
            ...mapActions({
                getwarehouse: 'api/getwarehouse',
                setlastChangeAreaId:'api/lastChangeAreaId'
            }),
            get_warehouse_area() {
                let data = {
                    warehouse_id: this.warehouse_id,
                    status: 1,
                    warehouse_area_type: 11,
                };
                this.$http(api_warehouse_area, data).then(res => {
                    this.warehouseAreaList = res;
                    this.warehouseAreaList = this.warehouseAreaList.map(res => {
                        return {
                            value: res.id,
                            label: res.code,
                            operator_ids: res.operator_ids
                        };
                    });
                    this.warehouseAreaList.unshift({value: '', label: '全部', operator_ids: []});
                    const currentOperatorArea = this.warehouseAreaList.find(area => {
                        return area.operator_ids.includes(this.userid)
                    });
                    if (currentOperatorArea) {
                        this.warehouse_area_id = currentOperatorArea.value;
                    }else{
                        console.log(currentOperatorArea, this.lastChangeAreaId);
                        this.warehouse_area_id = this.lastChangeAreaId;
                    }
                }).catch(code => {
                    Toast({message: code.message, position: 'top', duration: 1500});
                });
            },
            init() {
                let data = {
                    warehouse_id: this.warehouse_id,
                    warehouse_area_id: this.warehouse_area_id
                };
                this.$http(api_picking_process, data).then(res => {
                    console.log('56548res',res)
                    this.pickingData = res;
                    this.pickingData.forEach(data => {
                        this.$set(data, 'warehouse_id', this.warehouse_id);
                    });

                }).catch(code => {
                    console.log(code);
                });
            },
            get_picking(row) {
                this.$router.push({
                    path: "/picking-process/details",
                    query: {
                        id: row.id,
                        type: row.type,
                        warehouse_id: row.warehouse_id
                    }
                });
            }
        },
        computed: {
            ...mapGetters({
                info: 'api/info',
                lastChangeAreaId:'api/lastChangeAreaId'
            }),

            userid() {
                return this.info.user_id;
            }
        },
        watch:{
            warehouse_area_id(val){
                this.init();
                this.setlastChangeAreaId(val);
            }
        },
        components: {}
    }
</script>
